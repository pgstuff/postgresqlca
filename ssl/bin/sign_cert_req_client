#! /bin/bash

set -euo pipefail
shopt -s failglob

script_dir="$(dirname "$(readlink -f "$0")")"
base_dir="$(dirname "$script_dir")"
source "$base_dir/var/paths.sh"
pg_config_dir=${PGDATA-}
pg_reload=0
cert_users_file_name=ssl-cert_users
cert_users_group_name="$(cat "$ca_server_intermediate_dir/var/server_cert_users_group_name.var")"

function get_boolean() {
    case "$(echo "$1" | tr '[:upper:]' '[:lower:]')" in
        1|t|true|y|yes)
            echo 1
            return
        ;;
        0|f|false|n|no)
            echo 0
            return
        ;;
    esac
    echo "Value \"$1\" is not a recognized boolean value." >&2
    exit 2
}

parsed_args=$(getopt -o "d:r:" -l "datadirectory:,reload:" -n "$(basename $0)" -- "$@")
eval set -- "$parsed_args"
while [[ $# -gt 1 ]]; do
    case "$1" in
        -d|--datadirectory)
            pg_config_dir=$2
            shift
        ;;
        -r|--reload)
            pg_reload=$(get_boolean $2)
            shift
        ;;
        --)
            shift
            break
        ;;
        *)
            exit 2
        ;;
    esac
    shift
done

client_name=$1
cert_users_file_path=$pg_config_dir/$cert_users_file_name

if [ ! -e "$cert_users_file_path" ]; then
    echo "Run $base_dir/bin/install_cert_users_group first." >&2
    exit 2
fi

function sign_cert_req_client() {
    local ca_path=$1
    local client_name=$2
    local ca_pass=$3

    exec 3<<<"$ca_pass"
    "$ca_path/bin/sign_cert_req_client" "$client_name"
}

ca_client_intermediate_pass=$(openssl aes-256-cbc -salt -a -d -k "$(cat "$ssl_key_pass_path")" -in "$ca_client_intermediate_pass_path")

sign_cert_req_client "$ca_client_intermediate_dir" "$client_name" "$ca_client_intermediate_pass"

if ! grep -q "^${client_name}\$" "$cert_users_file_path"; then
    echo "${client_name}" >> "$cert_users_file_path"
    echo "Updated $cert_users_file_path"
fi

if [ -n "$cert_users_group_name" ]; then
    role_count=$(psql -tAc "SELECT COUNT(*) FROM pg_authid AS ssl_group INNER JOIN pg_auth_members AS group_members ON (ssl_group.oid = group_members.roleid) INNER JOIN pg_authid AS ssl_member ON (group_members.member = ssl_member.oid) WHERE ssl_group.rolname = '$cert_users_group_name' AND ssl_member.rolname = '$client_name'")
    if [ $role_count -eq 0 ]; then
        echo "Adding user to certificate users group \"$cert_users_group_name\""
        psql -c "ALTER GROUP \"$cert_users_group_name\" ADD USER \"$client_name\""
    fi
else
    "$base_dir/bin/server_reload" -r $pg_reload
fi
