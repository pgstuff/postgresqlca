#! /bin/bash

set -euo pipefail
shopt -s failglob

script_dir="$(dirname "$(readlink -f "$0")")"
base_dir="$(dirname "$script_dir")"
source "$base_dir/var/paths.sh"

pg_config_dir=${PGDATA-}
pg_config_path=
pg_reload=0
ssl_config_crl_name=ssl-client-crl.conf

function get_boolean() {
    case "$(echo "$1" | tr '[:upper:]' '[:lower:]')" in
        1|t|true|y|yes)
            echo 1
            return
        ;;
        0|f|false|n|no)
            echo 0
            return
        ;;
    esac
    echo "Value \"$1\" is not a recognized boolean value." >&2
    exit 2
}

parsed_args=$(getopt -o "d:c:r:" -l "datadirectory:,configfile:,reload:" -n "$(basename $0)" -- "$@")
eval set -- "$parsed_args"
while [[ $# -gt 1 ]]; do
    case "$1" in
        -d|--datadirectory)
            pg_config_dir=$2
            shift
        ;;
        -c|--configfile)
            pg_config_path=$2
            shift
        ;;
        -r|--reload)
            pg_reload=$(get_boolean $2)
            shift
        ;;
        *)
            exit 2
        ;;
    esac
    shift
done

if [ -n "$pg_config_dir" ]; then
    if [ -z "$pg_config_path" ]; then
        if [ -e "$pg_config_dir/postgresql.conf" ]; then
            pg_config_path=$pg_config_dir/postgresql.conf
        fi
    fi
fi

ssl_config_crl_path=${pg_config_dir}/${ssl_config_crl_name}

cat "$ca_client_root_dir/openssl/crl/ca.crl.pem" \
    "$ca_client_intermediate_dir/openssl/crl/ca.crl.pem" > "$pg_config_dir/root.crl"

cat > "$ssl_config_crl_path" <<EOF
ssl_crl_file = 'root.crl'
EOF
echo "Updated $ssl_config_crl_path"

if ! grep -q "include.*=.*${ssl_config_crl_name}" "$pg_config_path"; then
    echo "include = '$ssl_config_crl_name'" >> "$pg_config_path"
    echo "Updated $pg_config_path"
fi

"$base_dir/bin/server_reload" -r $pg_reload
