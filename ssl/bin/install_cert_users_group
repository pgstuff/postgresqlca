#! /bin/bash

set -euo pipefail
shopt -s failglob

script_dir="$(dirname "$(readlink -f "$0")")"
base_dir="$(dirname "$script_dir")"
source "$base_dir/var/paths.sh"

pg_config_dir=${PGDATA-}
pg_config_path=
pg_reload=0
cert_users_file_name=ssl-cert_users
cert_users_group_name="$(cat "$ca_server_intermediate_dir/var/server_cert_users_group_name.var")"

parsed_args=$(getopt -o "d:" -l "datadirectory:" -n "$(basename $0)" -- "$@")
eval set -- "$parsed_args"
while [[ $# -gt 1 ]]; do
    case "$1" in
        -d|--datadirectory)
            pg_config_dir=$2
            shift
        ;;
        *)
            exit 2
        ;;
    esac
    shift
done

cert_users_file_path=$pg_config_dir/$cert_users_file_name
pg_hba_conf_path="$pg_config_dir/pg_hba.conf"

if [ -n "$cert_users_file_name" ]; then
    if [ ! -e "$cert_users_file_path" ]; then
        cat >> "$cert_users_file_path" <<EOF
# This file lists PostgreSQL users who have certificates generated by a set of
# scripts.
# This file is updated by certificate generation scripts.
# Put each PostgreSQL user name on its own line.  Do not add leading or
# trailing spaces or tabs.
# This file can be referenced in pg_hba.conf so that users with certificates
# can use a dedicated HBA rule.
# The pg_hba.conf file will not parse correctly if this file has no entries, so
# leave 1 value as a placeholder.

PLACEHOLDER_ROLE_FOR_PG_HBA_CONF_LINE
EOF
        echo "Created $cert_users_file_path"
    fi
fi

if [ -n "$cert_users_group_name" ]; then
    if ! grep -q ".*host.*${cert_users_group_name}.*cert.*" "$pg_hba_conf_path"; then
        crtusrsgrpn="$cert_users_group_name"
# TYPE  DATABASE        USER            ADDRESS                 METHOD
    cat >> "$pg_hba_conf_path" <<EOF
#hostssl all             +${crtusrsgrpn} ::0/0                   cert clientcert=1
#hostssl all             +${crtusrsgrpn} 0.0.0.0/0               cert clientcert=1
EOF
        echo "Updated $pg_hba_conf_path"
        echo
        echo "1) EDIT $pg_hba_conf_path"
        echo "2) UNCOMMENT THE BOTTOM 2 hostssl LINES"
        echo "3) MOVE THEM ABOVE ALL OTHER host LINES"
        echo "4) RUN THE RELOAD SERVICE COMMAND FOR POSTGRESQL"
        echo
    fi
elif [ -n "$cert_users_file_name" ]; then
    if ! grep -q ".*host.*${cert_users_file_name}.*cert.*" "$pg_hba_conf_path"; then
        crtusrsfiln=$cert_users_file_name
# TYPE  DATABASE        USER            ADDRESS                 METHOD
        cat >> "$pg_hba_conf_path" <<EOF
#hostssl all             @${crtusrsfiln} ::0/0                   cert clientcert=1
#hostssl all             @${crtusrsfiln} 0.0.0.0/0               cert clientcert=1
EOF
        echo "Updated $pg_hba_conf_path"
        echo
        echo "1) EDIT $pg_hba_conf_path"
        echo "2) UNCOMMENT THE BOTTOM 2 hostssl LINES"
        echo "3) MOVE THEM ABOVE ALL OTHER host LINES"
        echo "4) RUN THE RELOAD SERVICE COMMAND FOR POSTGRESQL"
        echo
    fi
fi

if [ -n "$cert_users_group_name" ]; then
    role_count=$(psql -tAc "SELECT COUNT(*) FROM pg_roles WHERE rolname = '$cert_users_group_name'")
    if [ $role_count -eq 0 ]; then
        echo "Creating certificate users group \"$cert_users_group_name\""
        psql -c "CREATE GROUP \"$cert_users_group_name\""
    fi
fi
